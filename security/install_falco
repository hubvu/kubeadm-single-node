#!/usr/bin/env bash
set -euo pipefail
# colour variables
reset=$(tput sgr0)
red=$(tput bold && tput setaf 1)
green=$(tput bold && tput setaf 2)
yellow=$(tput bold && tput setaf 3)
# useful variables
date_time=$(date +'%d-%m-%Y-T%H:%M:%S%z')
sudo_home=$(getent passwd "$SUDO_USER" | cut --delimiter=: --fields=6)

function error() {
  echo "[$date_time]: $*" >&2
}

# https://github.com/falcosecurity/charts/tree/master/falco
function install_falco() {
  echo "$yellow Installing Falco Security through the Helm chart... $reset"
  if [[ -e /usr/local/bin/helm ]]; then
    echo "$yellow Adding the Falco Security repository... $reset"
    /usr/local/bin/helm repo add falcosecurity https://falcosecurity.github.io/charts \
      --kubeconfig="$sudo_home"/.kube/config \
      --force-update \
      --debug
    /usr/local/bin/helm repo update \
      --kubeconfig="$sudo_home"/.kube/config \
      --debug
    echo "$yellow Listing and searching for the chart in the Falco Security repository... $reset"
    /usr/local/bin/helm repo list \
      --kubeconfig="$sudo_home"/.kube/config \
      --output=table \
      --debug |
      grep "https://falcosecurity.github.io/charts"
    /usr/local/bin/helm search repo falcosecurity \
      --kubeconfig="$sudo_home"/.kube/config \
      --output=table \
      --debug
    echo "$yellow Installing the Falco Security Helm chart... $reset"
    /usr/local/bin/helm install falcosecurity/falco \
      --kubeconfig="$sudo_home"/.kube/config \
      --output=table \
      --namespace=falcosecurity \
      --create-namespace \
      --atomic \
      --debug \
      --generate-name \
      --set auditLog.enabled=true \
      --set ebpf.enabled=true \
      --set falco.logLevel=debug
    echo "$green Falco Security Helm chart installation completed... $reset"
  else
    error "$red Please ensure that a Helm 3 client is located in the following path first > [ /usr/local/bin/helm ]... $reset"
    exit 1
  fi
}

install_falco "$@"
