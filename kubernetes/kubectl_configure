#!/usr/bin/env bash
set -euo pipefail

reset=$(tput sgr0)
red=$(tput setaf 1)
green=$(tput setaf 2)
yellow=$(tput setaf 3)
date_time=$(date +'%d-%m-%Y-T%H:%M:%S%z')

function error(){
  echo "[$date_time]: $*" >&2
}

function main(){
  if [[ -e /usr/bin/kubectl && -e /usr/bin/kubelet && -e /usr/bin/kubeadm && -e etc/kubernetes/admin.conf ]]
  then
    kubectl_configure
    kubectl_autocomplete
  else
    error "$red Please ensure that kubeadm, kubectl and kubelet are installed first... $reset"
    exit 1
  fi
}

function kubectl_configure(){
  echo "$yellow Configuring kubectl... $reset"
  if [[ -d $HOME/.kube ]]
  then
    rm --recursive "$HOME/.kube"
    mkdir --parents "$HOME/.kube"
    cp /etc/kubernetes/admin.conf "$HOME/.kube/config"
    chown "$SUDO_USER:$SUDO_USER" "$HOME/.kube/config"
	  echo "$green kubectl configuration completed. $reset"
  else
	  mkdir --parents "$HOME/.kube"
    cp /etc/kubernetes/admin.conf "$HOME/.kube/config"
	  chown "$SUDO_USER:$SUDO_USER" "$HOME/.kube/config"
	  echo "$green kubectl configuration completed. $reset"
  fi
}
