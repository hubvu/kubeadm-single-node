#!/usr/bin/env bash
set -euo pipefail

reset=$(tput sgr0)
red=$(tput setaf 1)
green=$(tput setaf 2)
yellow=$(tput setaf 3)
date_time=$(date +'%d-%m-%Y-T%H:%M:%S%z')
working_directory=$(pwd)

function error(){
  echo "[$date_time]: $*" >&2
}

function main(){
  if [[ -e /usr/bin/rpm && -e /usr/bin/dnf && -e /usr/bin/yum && -e /etc/centos-release ]]
  then
    kubernetes_prerequisites
    kubernetes_centos
  elif [[ -e /usr/bin/apt && -e /usr/bin/dpkg && -e /etc/os-release && -e /etc/debian_version && ! -e /usr/bin/snap ]]
  then
    kubernetes_prerequisites
    kubernetes_debian
  else
    error "$red Please ensure that you are using CentOS or Debian $reset"
    exit 1
  fi
}

function kubernetes_prerequisites(){
  echo "$yellow Setting up Kubernetes pre-requisites... $reset"
  if [[ -e ../container-runtimes/containerd/containerd.conf && -e ../container-runtimes/containerd/99-kubernetes-cri.conf ]]
  then
    echo "$yellow Copying containerd.conf file to /etc/modules-load.d/... $reset"
    cp ../container-runtimes/containerd/containerd.conf /etc/modules-load.d/containerd.conf
    echo "$yellow Ensuring that required kernel modules are loaded... $reset"
    modprobe --verbose overlay
    modprobe --verbose br_netfilter
    echo "$yellow Copying 99-kubernetes-cri.conf file to /etc/sysctl.d/... $reset"
    cp ../container-runtimes/containerd/99-kubernetes-cri.conf /etc/sysctl.d/99-kubernetes-cri.conf
    echo "$yellow Applying the required sysctl parameters... $reset"
    sysctl --system
    echo "$green Pre-requisites completed. $reset"
  else
    error "$red Please ensure that the containerd.conf & 99-kubernetes-cri.conf files exists in the working directory first... $reset"
    exit 1
  fi
}

function kubernetes_centos(){
  echo "$yellow Setting up the Kubernetes repository... $reset"
  if [[ -e $working_directory/kubernetes.repo ]]
  then
    cp "$working_directory"/kubernetes.repo /etc/yum.repos.d/kubernetes.repo
    echo "$yellow Installing kubeadm, kubectl and kubelet... $reset"
    dnf update
    dnf install --assumeyes --disableexcludes=kubernetes kubeadm \
                                                         kubectl \
                                                         kubelet
    echo "$green Installation completed. $reset"
    kubelet_start
  else
    error "$red Please ensure that the kubernetes.repo file exists in the working directory first... $reset"
    exit 1
  fi
}
