#!/usr/bin/env bash
set -euo pipefail

reset=$(tput sgr0)
red=$(tput bold && tput setaf 1)
green=$(tput bold && tput setaf 2)
yellow=$(tput bold && tput setaf 3)
date_time=$(date +'%d-%m-%Y-T%H:%M:%S%z')
working_directory=$(pwd)
random_generated_password=$(pwgen --capitalize --secure --symbols -1 128)

function error(){
  echo "[$date_time]: $*" >&2
}

function main(){
  if [[ -e /usr/bin/pwgen ]]
  then
    weavenet_init
  else  
    if [[ -e /usr/bin/rpm && -e /usr/bin/dnf && -e /usr/bin/yum && -e /etc/centos-release ]]
    then
      echo "$yellow Ensuring pwgen is installed... $reset"
      dnf install --assumeyes pwgen
      weavenet_init
    elif [[ -e /usr/bin/apt && -e /usr/bin/dpkg && -e /etc/os-release && -e /etc/debian_version && ! -e /usr/bin/snap ]]
    then
      echo "$yellow Ensuring pwgen is installed... $reset"
      apt install --yes pwgen
      weavenet_init
    else
      error "$red Please ensure that you are using CentOS or Debian $reset"
      exit 1
    fi
  fi
}

# https://www.weave.works/docs/net/latest/kubernetes/kube-addon/#-changing-configuration-options
function weavenet_init(){
  echo "$yellow generating a password-secret to enable data plane encryption located at /var/lib/weave/weave-passwd... $reset"
  echo "$random_generated_password" > /var/lib/weave/weave-passwd
  echo "$yellow Creating a generic Kubernetes secret using the password-secret generated in the previous step... $reset"
  kubectl create secret --namespace=kube-system generic weave-passwd --from-file=/var/lib/weave/weave-passwd
  echo "$yellow Initialising the control plane... $reset"
  kubeadm init
  source "$working_directory"/kubernetes/kubectl_configure
  echo "$yellow Installing Weavenet... $reset"
  kubectl apply --record --filename="https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr --delete '\n')&password-secret=weave-passwd"
  echo "$green WeaveNet installation complete... $reset"
}

main "$@"


