#!/usr/bin/env bash
# shellcheck disable=SC1091
set -euo pipefail
# colour variables
reset=$(tput sgr0)
red=$(tput bold && tput setaf 1)
green=$(tput bold && tput setaf 2)
yellow=$(tput bold && tput setaf 3)
# useful variables
date_time=$(date +'%d-%m-%Y-T%H:%M:%S%z')
working_directory=$(pwd)
sudo_home=$(getent passwd "$SUDO_USER" | cut --delimiter=: --fields=6)
random_generated_password=$(pwgen --capitalize --secure --symbols -1 128)

function error(){
  echo "[$date_time]: $*" >&2
}

# https://www.weave.works/docs/net/latest/kubernetes/kube-addon/#configuration-options
function weavenet_init(){
  if [[ -e /usr/bin/kubectl && -e /usr/bin/kubeadm ]]
  then
    echo "$yellow Initialising the control plane... $reset"
    kubeadm init
    source "$working_directory"/kubernetes/kubectl_configure
    echo "$yellow Generating a password-secret to enable data plane encryption - located at /var/lib/weave/weave-passwd... $reset"
    mkdir --parents --verbose /var/lib/weave
    touch /var/lib/weave/weave-passwd
    echo "$random_generated_password" > /var/lib/weave/weave-passwd
    echo "$yellow Creating a generic Kubernetes secret using the password-secret generated in the previous step... $reset"
    sleep 3s
    kubectl create secret --kubeconfig="$sudo_home"/.kube/config \
                          --namespace=kube-system generic weave-passwd \
                          --from-file=/var/lib/weave/weave-passwd
    echo "$yellow Installing WeaveNet... $reset"
    kubectl apply --record \
                  --kubeconfig="$sudo_home"/.kube/config \
                  --filename="https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr --delete '\n')&password-secret=weave-passwd"
    echo "$green WeaveNet installation complete... $reset"
  else
    error "$red Please ensure that 'kubeadm' and 'kubectl' are installed first... $reset"
    exit 1
  fi
}

weavenet_init "$@"
