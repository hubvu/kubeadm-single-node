#!/usr/bin/env bash
set -euo pipefail

reset=$(tput sgr0)
red=$(tput bold && tput setaf 1)
green=$(tput bold && tput setaf 2)
yellow=$(tput bold && tput setaf 3)
date_time=$(date +'%d-%m-%Y-T%H:%M:%S%z')
working_directory=$(pwd)
sudo_home=$(getent passwd "$SUDO_USER" | cut --delimiter=: --fields=6)

function error(){
  echo "[$date_time]: $*" >&2
}

# https://docs.cilium.io/en/stable/gettingstarted/k8s-install-default/
function cilium_init(){
  if [[ -e /usr/bin/kubectl && -e /usr/bin/kubeadm ]]
  then
    echo "$yellow Initialising the control plane... $reset"
    kubeadm init
    source "$working_directory"/kubernetes/kubectl_configure
    echo "$yellow Installing Cilium... $reset"
    sleep 3s
    kubectl apply --record \
                  --kubeconfig="$sudo_home"/.kube/config \
                  --filename=https://raw.githubusercontent.com/cilium/cilium/master/install/kubernetes/quick-install.yaml
    echo "$yellow Enabling Hubble for cluster-wide visibility... $reset"
    kubectl apply --record \
                  --kubeconfig="$sudo_home"/.kube/config \
                  --filename=https://raw.githubusercontent.com/cilium/cilium/master/install/kubernetes/quick-hubble-install.yaml
     echo "$green Cilium installation complete... $reset"
     cilium_connectivity_tests
  else
    error "$red Please ensure that kubeadm and kubectl are installed first... $reset"
    exit 1
  fi
}

function cilium_connectivity_tests(){
    echo "$yellow Create a namespace for Cilium connectivity tests... $reset"
    kubectl create namespace cilium-test
    echo "$yellow Deploying Cilium connectivity tests... $reset"
    kubectl apply --record \
                  --kubeconfig="$sudo_home"/.kube/config \
                  --namespace=cilium-test \
                  --filename=https://raw.githubusercontent.com/cilium/cilium/master/examples/kubernetes/connectivity-check/connectivity-check.yaml
    echo "$green Cilium connectivity tests deployment complete... $reset"
}

cilium_init "$@"
